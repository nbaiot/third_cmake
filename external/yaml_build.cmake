include(ExternalProject)

set(YAML_SOURCES_DIR ${THIRD_PARTY_PATH}/yaml-cpp)
set(YAML_INCLUDE_DIR ${YAML_INSTALL_PATH}/include)

set(YAML_REPOSITORY "https://github.com/jbeder/yaml-cpp.git")
set(YAML_TAG "master")

if (ANDROID)
    set(ANDROID_ABI_ARG -DANDROID_ABI=${ANDROID_ABI})
    set(ANDROID_PLATFORM_ARG -DANDROID_PLATFORM=${ANDROID_PLATFORM})
    set(ANDROID_NDK_ARG -DANDROID_NDK=${ANDROID_NDK})
    set(ANDROID_TOOLCHAIN_FILE_ARG -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE})

    if (ARMEABI_V7A)
        set(YAML_ARM_MODE "-DANDROID_ARM_MODE=arm")
        set(YAML_ASM_FLAGS "-DCMAKE_ASM_FLAGS=\"--target=arm-linux-androideabi${ANDROID_PLATFORM_LEVEL}\"")
    elseif (ARM64_V8A)
        set(YAML_ARM_MODE "-DANDROID_ARM_MODE=arm")
        set(YAML_ASM_FLAGS "-DCMAKE_ASM_FLAGS=\"--target=aarch64-linux-android${ANDROID_PLATFORM_LEVEL}\"")
    elseif (X86)
        enable_language(ASM_NASM)
    else (X86_64)
        enable_language(ASM_NASM)
    endif()
endif()

ExternalProject_Add(
        extern_yaml-cpp
        GIT_REPOSITORY ${YAML_REPOSITORY}
        GIT_TAG ${YAML_TAG}
        PREFIX ${YAML_SOURCES_DIR}
        UPDATE_COMMAND ""
        CMAKE_ARGS
        ${ANDROID_ABI_ARG}
        ${ANDROID_PLATFORM_ARG}
        ${ANDROID_NDK_ARG}
        ${ANDROID_TOOLCHAIN_FILE_ARG}
        -DCMAKE_MODULE_PATH=${CMAKE_SYSTEM_PREFIX_PATH}
        -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD}
        -DCMAKE_INSTALL_PREFIX=${YAML_INSTALL_PATH}
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        -DCMAKE_BUILD_TYPE=${THIRD_PARTY_BUILD_TYPE}
        ${YAML_ARM_MODE}
        ${YAML_ASM_FLAGS}
        CMAKE_CACHE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${YAML_INSTALL_PATH}
        -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
        -DCMAKE_BUILD_TYPE:STRING=${THIRD_PARTY_BUILD_TYPE}
        BUILD_ALWAYS FALSE
)
if (YAML_USE_STATIC)
    set(SHARED_OR_STATIC "STATIC")
    set(LIB_SUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})
else ()
    set(SHARED_OR_STATIC "SHARED")
    set(LIB_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
endif ()

set(YAML_LIBRARY "${YAML_INSTALL_PATH}/lib/libyaml-cpp${LIB_SUFFIX}" CACHE FILEPATH "YAML_LIBRARY" FORCE)

add_library(yaml-cpp ${SHARED_OR_STATIC} IMPORTED GLOBAL)
set_property(TARGET yaml-cpp PROPERTY IMPORTED_LOCATION ${YAML_LIBRARY})
add_dependencies(yaml-cpp extern_yaml-cpp)
include_directories(${YAML_INCLUDE_DIR})
set(YAML_INCLUDE_DIRS ${YAML_INCLUDE_DIR})
set(YAML_LIBRARIES ${YAML_LIBRARY})

### restore
set(SHARED_OR_STATIC)
set(LIB_SUFFIX)
