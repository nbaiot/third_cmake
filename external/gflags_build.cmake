include(ExternalProject)

set(GFLAGS_SOURCES_DIR ${THIRD_PARTY_PATH}/gflags)
set(GFLAGS_INSTALL_DIR ${THIRD_PARTY_INSTALL_PATH}/gflags)
set(GFLAGS_INCLUDE_DIR "${GFLAGS_INSTALL_DIR}/include" CACHE PATH "gflags include directory." FORCE)

set(GFLAGS_REPOSITORY "https://github.com/gflags/gflags.git")
set(GFLAGS_TAG "v2.2.2")

if (ANDROID)
    set(ANDROID_ABI_ARG -DANDROID_ABI=${ANDROID_ABI})
    set(ANDROID_PLATFORM_ARG -DANDROID_PLATFORM=${ANDROID_PLATFORM})
    set(ANDROID_NDK_ARG -DANDROID_NDK=${ANDROID_NDK})
    set(ANDROID_TOOLCHAIN_FILE_ARG -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE})
endif()

ExternalProject_Add(
        extern_gflags
        GIT_REPOSITORY ${GFLAGS_REPOSITORY}
        GIT_TAG ${GFLAGS_TAG}
        PREFIX ${GFLAGS_SOURCES_DIR}
        UPDATE_COMMAND ""
        CMAKE_ARGS
        ${ANDROID_ABI_ARG}
        ${ANDROID_PLATFORM_ARG}
        ${ANDROID_NDK_ARG}
        ${ANDROID_TOOLCHAIN_FILE_ARG}
        -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD}
        -DCMAKE_INSTALL_PREFIX=${GFLAGS_INSTALL_DIR}
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        -DCMAKE_BUILD_TYPE=${THIRD_PARTY_BUILD_TYPE}
        -DBUILD_TESTING=OFF
        -DBUILD_STATIC_LIBS=ON
        ${EXTERNAL_OPTIONAL_ARGS}
        CMAKE_CACHE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${GFLAGS_INSTALL_DIR}
        -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
        -DCMAKE_BUILD_TYPE:STRING=${THIRD_PARTY_BUILD_TYPE}
        BUILD_ALWAYS FALSE
)

set(GFLAGS_LIBRARIE "${GFLAGS_INSTALL_DIR}/lib/libgflags${CMAKE_STATIC_LIBRARY_SUFFIX}" CACHE FILEPATH "GFLAGS_LIBRARIE" FORCE)

add_library(gflags STATIC IMPORTED GLOBAL)
set_property(TARGET gflags PROPERTY IMPORTED_LOCATION ${GFLAGS_LIBRARIE})
add_dependencies(gflags extern_gflags)
include_directories(${GFLAGS_INCLUDE_DIR})
