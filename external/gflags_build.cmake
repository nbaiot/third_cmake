include(ExternalProject)

set(GFLAGS_SOURCES_DIR ${THIRD_PARTY_PATH}/gflags)
set(GFLAGS_INCLUDE_DIR ${GFLAGS_INSTALL_PATH}/include)

set(GFLAGS_REPOSITORY "https://github.com/gflags/gflags.git")
set(GFLAGS_TAG "v2.2.2")

if (ANDROID)
    set(ANDROID_ABI_ARG -DANDROID_ABI=${ANDROID_ABI})
    set(ANDROID_PLATFORM_ARG -DANDROID_PLATFORM=${ANDROID_PLATFORM})
    set(ANDROID_NDK_ARG -DANDROID_NDK=${ANDROID_NDK})
    set(ANDROID_TOOLCHAIN_FILE_ARG -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE})
endif()

ExternalProject_Add(
        extern_gflags
        GIT_REPOSITORY ${GFLAGS_REPOSITORY}
        GIT_TAG ${GFLAGS_TAG}
        PREFIX ${GFLAGS_SOURCES_DIR}
        UPDATE_COMMAND ""
        CMAKE_ARGS
        ${ANDROID_ABI_ARG}
        ${ANDROID_PLATFORM_ARG}
        ${ANDROID_NDK_ARG}
        ${ANDROID_TOOLCHAIN_FILE_ARG}
        -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD}
        -DCMAKE_INSTALL_PREFIX=${GFLAGS_INSTALL_PATH}
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        -DCMAKE_BUILD_TYPE=${THIRD_PARTY_BUILD_TYPE}
        -DBUILD_TESTING=OFF
        -DBUILD_STATIC_LIBS=ON
        -DBUILD_SHARED_LIBS=ON
        CMAKE_CACHE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${GFLAGS_INSTALL_PATH}
        -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
        -DCMAKE_BUILD_TYPE:STRING=${THIRD_PARTY_BUILD_TYPE}
        BUILD_ALWAYS FALSE
)
if (GFLAGS_USE_STATIC)
    set(SHARED_OR_STATIC "STATIC")
    set(LIB_SUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})
else ()
    set(SHARED_OR_STATIC "SHARED")
    set(LIB_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
endif ()

set(GFLAGS_LIBRARY "${GFLAGS_INSTALL_PATH}/lib/libgflags${LIB_SUFFIX}" CACHE FILEPATH "GFLAGS_LIBRARY" FORCE)

add_library(gflags ${SHARED_OR_STATIC} IMPORTED GLOBAL)
set_property(TARGET gflags PROPERTY IMPORTED_LOCATION ${GFLAGS_LIBRARY})
add_dependencies(gflags extern_gflags)

include_directories(${GFLAGS_INCLUDE_DIR})
set(GFLAGS_INCLUDE_DIRS ${GFLAGS_INCLUDE_DIR})
set(GFLAGS_LIBRARIES ${GFLAGS_LIBRARY})

### restore
set(SHARED_OR_STATIC)
set(LIB_SUFFIX)