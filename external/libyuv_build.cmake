include(ExternalProject)

set(LIBYUV_SOURCES_DIR ${THIRD_PARTY_PATH}/libyuv)
set(LIBYUV_INCLUDE_DIR ${LIBYUV_INSTALL_PATH}/include)

set(LIBYUV_REPOSITORY "https://github.com/nbaiot/libyuv.git")

if (ANDROID)
    set(ANDROID_ABI_ARG -DANDROID_ABI=${ANDROID_ABI})
    set(ANDROID_PLATFORM_ARG -DANDROID_PLATFORM=${ANDROID_PLATFORM})
    set(ANDROID_NDK_ARG -DANDROID_NDK=${ANDROID_NDK})
    set(ANDROID_TOOLCHAIN_FILE_ARG -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE})
endif ()

if (THIRD_PARTY_INDEPENDENT_INSTALL)
    set(SEARCH_JPEG ${THIRD_PARTY_INSTALL_PATH}/libyuv)
else ()
    set(SEARCH_JPEG ${THIRD_PARTY_INSTALL_PATH})
endif ()
if (LIBYUV_LINK_STATIC_JPEG)
    set(LIBYUV_LINK_JPEG "-DCMAKE_CXX_STANDARD_LIBRARIES=\"${SEARCH_JPEG}/lib/libturbojpeg.a\"")
else ()
    set(LIBYUV_LINK_JPEG "-DANDROID_ALLOW_UNDEFINED_SYMBOLS=TRUE")
endif ()
ExternalProject_Add(
        extern_libyuv
        DEPENDS jpeg-turbo
        GIT_REPOSITORY ${LIBYUV_REPOSITORY}
        PREFIX ${LIBYUV_SOURCES_DIR}
        UPDATE_COMMAND ""
        CMAKE_ARGS
        ${ANDROID_ABI_ARG}
        ${ANDROID_PLATFORM_ARG}
        ${ANDROID_NDK_ARG}
        ${ANDROID_TOOLCHAIN_FILE_ARG}
        -DCMAKE_INSTALL_PREFIX=${LIBYUV_INSTALL_PATH}
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        -DCMAKE_BUILD_TYPE=${THIRD_PARTY_BUILD_TYPE}
        -DJPEG_INSTALL_PATH=${SEARCH_JPEG}
        #        TODO: fixme
        #        -DJPEG_USE_STATIC=${JPEG_USE_STATIC}
        -DJPEG_USE_STATIC=FALSE
        ${LIBYUV_LINK_JPEG}
        -DCMAKE_PREFIX_PATH=${SEARCH_JPEG}
        -DCMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}
        CMAKE_CACHE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${LIBYUV_INSTALL_PATH}
        -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
        -DCMAKE_BUILD_TYPE:STRING=${THIRD_PARTY_BUILD_TYPE}
        BUILD_ALWAYS FALSE
)
if (LIBYUV_USE_STATIC)
    set(SHARED_OR_STATIC "STATIC")
    set(LIB_SUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})
else ()
    set(SHARED_OR_STATIC "SHARED")
    set(LIB_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
endif ()

set(LIBYUV_LIBRARY "${LIBYUV_INSTALL_PATH}/lib/libyuv${LIB_SUFFIX}" CACHE FILEPATH "LIBYUV_LIBRARY" FORCE)

add_library(libyuv ${SHARED_OR_STATIC} IMPORTED GLOBAL)
set_property(TARGET libyuv PROPERTY IMPORTED_LOCATION ${LIBYUV_LIBRARY})
add_dependencies(libyuv extern_libyuv)
include_directories(${LIBYUV_INCLUDE_DIR})
set(LIBYUV_INCLUDE_DIRS ${LIBYUV_INCLUDE_DIR})
set(LIBYUV_LIBRARIES ${LIBYUV_LIBRARY})

### restore
set(SHARED_OR_STATIC)
set(LIB_SUFFIX)