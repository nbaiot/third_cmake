include(FindPackageHandleStandardArgs)

set(CMAKE_FIND_LIBRARY_SUFFIXES_SAV ${CMAKE_FIND_LIBRARY_SUFFIXES})

if (YAML_USE_STATIC)
    set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_STATIC_LIBRARY_SUFFIX})
    set(SHARED_OR_STATIC "STATIC")
else ()
    set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES_SAV})
    set(SHARED_OR_STATIC "SHARED")
endif ()

unset(YAML_LIBRARY CACHE)
find_library(
        YAML_LIBRARY
        NAMES "yaml-cpp"
        PATHS ${YAML_INSTALL_PATH}
        PATH_SUFFIXES "lib" "lib64"
        NO_DEFAULT_PATH
        NO_CMAKE_FIND_ROOT_PATH
)

unset(YAML_INCLUDE CACHE)
find_path(
        YAML_INCLUDE_DIR
        NAMES "yaml-cpp/yaml.h"
        PATHS ${YAML_INSTALL_PATH}
        PATH_SUFFIXES "include"
        NO_DEFAULT_PATH
        NO_CMAKE_FIND_ROOT_PATH
)

find_package_handle_standard_args(YAML DEFAULT_MSG YAML_LIBRARY YAML_INCLUDE_DIR)

if (YAML_FOUND)
    if (NOT TARGET yaml-cpp)
        add_library(yaml-cpp ${SHARED_OR_STATIC} IMPORTED GLOBAL)
    endif ()
    set_property(TARGET yaml-cpp PROPERTY IMPORTED_LOCATION ${YAML_LIBRARY})
    include_directories(${YAML_INCLUDE_DIR})
    set(YAML_INCLUDE_DIRS ${YAML_INCLUDE_DIR})
    set(YAML_LIBRARIES ${YAML_LIBRARY})
endif ()

### restore
set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES_SAV})
set(SHARED_OR_STATIC)
